/*! \file */
/*******************************************
 *                                         *
 *  File auto-generated by `::safer_ffi`.  *
 *                                         *
 *  Do not manually edit this file.        *
 *                                         *
 *******************************************/

#ifndef __RUST_IROH_FFI__
#define __RUST_IROH_FFI__

#ifdef __cplusplus
extern "C" {
#endif


#include <stddef.h>
#include <stdint.h>

uint32_t iroh_get (
    char const * hash,
    char const * peer,
    char const * peer_addr,
    char const * out_path);

uint32_t iroh_get_ticket (
    char const * ticket,
    char const * out_path);

/** \brief
 *  Same as [`Vec<T>`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout
 */
typedef struct Vec_uint8 {

    uint8_t * ptr;

    size_t len;

    size_t cap;

} Vec_uint8_t;

/** \brief
 *  A blob entry of a collection
 */
typedef struct IrohBlob {

    Vec_uint8_t name;

    Vec_uint8_t hash;

} IrohBlob_t;

/** \brief
 *  Same as [`Vec<T>`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout
 */
typedef struct Vec_IrohBlob {

    IrohBlob_t * ptr;

    size_t len;

    size_t cap;

} Vec_IrohBlob_t;

typedef struct IrohCollection {

    Vec_IrohBlob_t blobs;

    uint64_t total_blobs_size;

} IrohCollection_t;

IrohCollection_t iroh_describe_collection (
    char const * ticket,
    char const * out_path);


#ifdef __cplusplus
} /* extern "C" */
#endif

#endif /* __RUST_IROH_FFI__ */
